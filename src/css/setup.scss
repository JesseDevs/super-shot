*,
*::before,
*::after {
	box-sizing: border-box;
	margin: 0;
	position: relative;
	font-weight: normal;
}

body, #app {
	display: contents;
	line-height: 1.4;

}

vue-app {
	position: relative;
	z-index: -100;
	min-height: calc(100vh - 90px);
	display: flex;
	flex-direction: column;
	color: var(--color-text);
	background: rgb(220, 219, 219);
	transition: color 0.5s, background-color 0.5s;
	line-height: 1.4;
	font-family: 'Montserrat', sans-serif;
	font-weight: 400;
	text-rendering: optimizeLegibility;
	scroll-behavior: smooth;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@media (min-width:500px) {
	vue-app {
		min-height: 100vh;
	}
}

main {
	display: flex;
	flex-direction: column;
	flex-grow: 1;
	line-height: 1.4;
}

main>section {
	display: flex;
	flex-direction: column;
	flex: 1;
}

inner-column {
	flex: 1;
	display: block;
	width: 100%;
	margin-right: auto;
	margin-left: auto;
	background: var(--page);
	padding: 1.5rem 1rem;
	max-width: 1200px;
	position: relative;
}

text-content {
	display: flex;
	width: 100%;
	flex-direction: column;
	align-items: center;
}

article-grid,
module,
label,
input,
field,
button {
	display: block;
	width: 100%;
}

/* display elements */

a {
	display: block;
	text-decoration: none;
	color: inherit;
}

a p {
	display: inline;
}

p a {
	display: inline-block;
	text-decoration: underline;
	color: inherit;
	font-size: inherit;

	transition: background-color 200ms ease-in-out;
}

p a:hover {
	background-color: var(--off-color);
	color: var(--page);
}


p {
	line-height: 1.4;
	max-width: 60ch;
}

strong {
	font-weight: bold;
}

em {
	font-style: italic;
}

picture {
	display: block;
}

picture img {
	display: block;
	height: auto;
	width: 100%;
}

svg {
	display: block;
	width: 100%;
	height: 100%;
}

.visually-hidden {
	clip: rect(0 0 0 0);
	clip-path: inset(50%);
	height: 1px;
	overflow: hidden;
	position: absolute;
	white-space: nowrap;
	width: 1px;
}

.hide {
	opacity: 0;
	pointer-events: none;
}

.gs_reveal {
	opacity: 0;
	visibility: hidden;
	will-change: transform, opacity;
}